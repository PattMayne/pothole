# An example configuration file.
# Use this as a base for your
# deployed configuration.

[db]

## For sqlite builds
filename="main.db"

## For postgres builds
host="127.0.0.1:5432" 
name="pothole"
user="pothole"
# You should avoid passwords with double quotes.
# Backslashing them does not work.
password="SOMETHING_SECRET"

## Instance specific settings

[instance]
# The name of your instance.
# This can be anything (Fx. Church of Penguin)
name="The Penguin Bazaar"

# Your instance's description. There are no specific requirements
# But it is a wise idea to keep it short.
summary="Explore a place of calm, beauty and true social communications."

description="Explore a place of calm, beauty and true social communications. The Penguin Bazaar contains many friendly people to chat with, merchants, customers, sorcerers, witches and many more!"

# This is the domain name that Pothole is running on.
# you should NEVER change it once it's set.
uri="ph.example.com"

# This is the uri that outgoing ActivityPub JSON payloads will be disguised with.
# If you set this, do not change it, otherwise you will break quite a load of stuff.
# Assuming you set this up correctly, this feature will allow you to host a Pothole instance
# on a subdomain, but somehow let you disguise your posts as coming from whatever other
# subdomain you want.
# For example, you can set up your server on ph.example.com and make it so 
# your posts look like they come from @example.com
# 
# This is still unused however.
disguised_uri="example.com"

# How many characters are users allowed to write in a post.
# It is highly recommended to set this number to something above or equal to 2000.
# Note: Posts over this limit will not be federated.
# You can set it to 0 to disable. (Not recommended)
max_chars=2000

# The instance's email address
# If this is not set then it will just show up empty in MastoAPI
# Note: This option does *not* give people admin privileges.
email="god@example.gov"

# The instance rules.
# You can add whatever you want here.
# If you leave this out then everything related to rules will show up empty
rules=["You may not purchase or offer plastic bags.","Humans are welcome (They are weird looking penguins after all)","No seals, orcas, sea lions, sharks, armadillos, tasmanian devils, skuas, falcons, sheathbills, or petrels! Y'all suck!"]

[web]
# By default Pothole will show instance staff in its API layer and website.
# You can disable this to hide it.
show_staff=true

# By default Pothole will hide its version in its API layer and website.
# You can enable this to show it.
show_version=true

# Specify which port the web server will
# run on. This is optional and Pothole
# will use 3500 by default
port=3500

# This controls how many posts will be rendered per page for a user profile
# 20 is a reasonable substitute and it's the default.
# You can set this to zero which will disable this check, which is not recommended.
max_posts_per_page=20

[storage]

# The static folder is used to store templates for user profiles and instance stylesheets.
# Do not store user-generated content here.
static="static/"

# Unused config options

# Pothole supports 2 different storage mechanisms.
# Flat storage: Uploads are handled by Pothole's web server, and copied to the folder configured in storage:upload_folder. Set this to "flat" to enable this.
# Remote proxy: Uploads are magically sent to whatever S3-compatible server you configure. (Incomplete) Set this to "remote" and configure the server to enable this feature.
# Which one is better? Well if it's a server only for you then consider setting up Flat storage *SECURELY*
# If it's for a large server or you wanna join a "media proxy collection" then set up Remote proxy.
type="flat"

# The user uploads directory. Any files uploaded by users will be available here.
# Provided that the storage type is set to flat
upload_folder="uploads/"

# If you have implemented a system such as the one described here: https://webb.spiderden.org/2023/05/26/pleroma-mitigation/
# then you can set this url to the "media server" you have. 
# Pothole will simply append the media it seeks to the end of whatever URL to add here, so:
# https://media.example.com/pothole/ turns into https://media.example.com/pothole/user_id/media_filename/
# If this is not set, then under a default config, Pothole will use the instance:uri option + /media/ like so:
# https://ph.example.com/media/user_id/media_filename/
upload_uri=""

#type="remote"
#upload_server="uh, idk s3?"


[user]
# This option controls whether to enable or disable new user registrations
# This is on by default
registrations_open=true