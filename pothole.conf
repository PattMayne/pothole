# An example configuration file.
# Use this as a base for your
# deployed configuration.

# Specify what database type you will be running
# No database is supported as of yet.

[db]
type=sqlite

# Use this only if you have "sqlite" as your database type
filename="main.db"

## Instance specific settings
[instance]
# The name of your instance.
# This can be anything (Fx. Church of Penguin)
name="The Penguin Bazaar"
# Your instance's description. There are no specific requirements
# But it is a wise idea to keep it short.
description="Explore an area of calm, beauty and stability."
# This is the domain name that Pothole is running on.
# You can use this + some weird web server tricks to 
# Run a pothole server at your main domain (apex domain)
# Although I haven't tested it, but one thing that I am sure of
# is that you should NEVER change it once it's set.
uri="ph.example.gov"

[web]
# Specify which port the web server will
# run on. This is optional and Pothole
# will use 3500 by default
port=3500
# By default Pothole will hide its version.
show_version=false

[folders]
# The static folder contains CSS, ToS and other fun things.
# These are generated by Pothole on demand and stored in the disk
# So as to save time (assets.load() takes quite a lot of time to process)
# and to save memory, storing static assets inside memory might improve speed 
# but one of my goals is to reduce memory usage for useless thing.
# I want to use memory to optimize requests specifically.
# 
# Anyways, this is optional and Pothole will default to 
# a folder called "static" in the current working directory
# But if you are going to change this then make sure to
# add a slash at the end.
static="static/"
# The user uploads directory. Any files uploaded by users (except for themes) will be available here.
uploads="uploads/"
# User themes directory, see docs/DESIGN.md for how blogs are stored.
blogs="blogs/"

[user]
# Whether to enable or disable new user registrations
# This is on by default
registrations_open = true
# Whether users are allowed to embed instance info (Name, Description, URI) in their profile pages
# This is off by default
embed_instance_info = false